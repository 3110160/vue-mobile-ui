import Vue from 'vue'import template from './src/index.vue'const Tip = Vue.extend(template);const instance = new Tip({   el:document.createElement('div')});var time;const show = (options={})=>{    let elem = instance.$el;    instance.msg = options.msg;    instance.title = options.title;    instance.icon = options.icon;    instance.cancelText = options.cancel&&options.cancel.text || undefined;    instance.hesitateText = options.hesitate&&options.hesitate.text || undefined;    instance.confirmText = options.confirm&&options.confirm.text || undefined;    instance.hasHesitate = !!options.hesitate;    //添加confirm回调    instance.toConfirm = ()=>{        let elem = instance.$el;        elem.parentNode&&elem.parentNode.removeChild(elem);        time&&clearTimeout(time);        time = setTimeout(()=>{            instance.show = false;            clearTimeout(time);        },50);        options.confirm&&options.confirm.cb&&typeof options.confirm.cb ==='function'&&options.confirm.cb();    };    //添加cancel回调    instance.toCancel = ()=>{        let elem = instance.$el;        elem.parentNode&&elem.parentNode.removeChild(elem);        time&&clearTimeout(time);        time = setTimeout(()=>{            instance.show = false;            clearTimeout(time);        },50);        options.cancel&&options.cancel.cb&&typeof options.cancel.cb ==='function'&&options.cancel.cb();    };    //添加hesitate回调    instance.toHesitate = ()=>{        let elem = instance.$el;        elem.parentNode&&elem.parentNode.removeChild(elem);        time&&clearTimeout(time);        time = setTimeout(()=>{            instance.show = false;            clearTimeout(time);        },50);        options.hesitate&&options.hesitate.cb&&typeof options.hesitate.cb ==='function'&&options.hesitate.cb();    };    elem&&document.body.appendChild(elem);    time&&clearTimeout(time);    time = setTimeout(()=>{        instance.show = true;        clearTimeout(time);    },50);};export default {    show:show}